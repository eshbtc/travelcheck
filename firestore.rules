rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && request.auth.token != null && request.auth.token.role == 'admin';
    }
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if (request.auth != null && request.auth.uid == userId) || isAdmin();
    }
    
  // Users can read and write their own email accounts
  match /email_accounts/{accountId} {
    allow read, write: if isAdmin() || (request.auth != null && 
      resource.data.userId == request.auth.uid);
    allow create: if isAdmin() || (request.auth != null && 
      request.resource.data.userId == request.auth.uid);
  }
    
    // Users can read and write their own flight emails
    match /flight_emails/{emailId} {
      allow read, write: if isAdmin() || (request.auth != null && 
        resource.data.userId == request.auth.uid);
      allow create: if isAdmin() || (request.auth != null && 
        request.resource.data.userId == request.auth.uid);
    }
    
    // Users can read and write their own travel history
    match /travel_history/{userId} {
      allow read, write: if (request.auth != null && 
        request.auth.uid == userId) || isAdmin();
    }
    
    // Users can read and write their own passport scans
    match /passport_scans/{scanId} {
      allow read, write: if isAdmin() || (request.auth != null && 
        resource.data.userId == request.auth.uid);
      allow create: if isAdmin() || (request.auth != null && 
        request.resource.data.userId == request.auth.uid);
    }
    
    // Users can read and write their own travel entries
    match /travel_entries/{entryId} {
      allow read, write: if isAdmin() || (request.auth != null && 
        (resource.data.user_id == request.auth.uid || resource.data.userId == request.auth.uid));
      allow create: if isAdmin() || (request.auth != null && 
        (request.resource.data.user_id == request.auth.uid || request.resource.data.userId == request.auth.uid));
    }
    
    // Users can read and write their own reports
    match /reports/{reportId} {
      allow read, write: if isAdmin() || (request.auth != null && 
        resource.data.userId == request.auth.uid);
      allow create: if isAdmin() || (request.auth != null && 
        request.resource.data.userId == request.auth.uid);
    }
    
    // Health check endpoint (public read)
    match /health_check/{document} {
      allow read: if true;
    }
  }
}
